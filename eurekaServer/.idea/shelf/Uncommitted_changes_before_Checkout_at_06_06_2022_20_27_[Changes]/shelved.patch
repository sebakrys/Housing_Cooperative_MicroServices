Index: ../BudMiesz/src/main/java/com/nsai/spoldzielnia/Service/AuthService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nsai.spoldzielnia.Service;\r\n\r\nimport org.springframework.http.HttpEntity;\r\nimport org.springframework.http.HttpHeaders;\r\nimport org.springframework.http.HttpMethod;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.web.client.RestTemplate;\r\n\r\nimport java.util.List;\r\n\r\n@Service\r\npublic class AuthService {\r\n\r\n    public  String keycloakAuthAddr = \"http://localhost:8000/keycloak-service\";\r\n\r\n    public Boolean isAdmin(String JWT_Token){\r\n        //weryfikacja czy jest admin\r\n        HttpHeaders headers = new HttpHeaders();\r\n        headers.add(\"Authorization\", JWT_Token);\r\n        HttpEntity<String> request = new HttpEntity<String>(headers);\r\n        try {\r\n            ResponseEntity re= new RestTemplate().exchange(keycloakAuthAddr+\"/admin\", HttpMethod.GET, request, String.class);\r\n            System.out.println(re.getStatusCodeValue());\r\n            if(re.getStatusCodeValue()!=200){//jesli nie 200 wycofaj\r\n                return false;\r\n            }else{\r\n                return true;\r\n            }\r\n        }catch (Exception e){\r\n            System.out.println(e);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public Boolean isManager(String JWT_Token){\r\n        //weryfikacja czy jest manager\r\n        HttpHeaders headers = new HttpHeaders();\r\n        headers.add(\"Authorization\", JWT_Token);\r\n        HttpEntity<String> request = new HttpEntity<String>(headers);\r\n        try {\r\n            ResponseEntity re= new RestTemplate().exchange(keycloakAuthAddr+\"/moderator\", HttpMethod.GET, request, String.class);\r\n            System.out.println(re.getStatusCodeValue());\r\n            if(re.getStatusCodeValue()!=200){//jesli nie 200 wycofaj\r\n                return false;\r\n            }else{\r\n                return true;\r\n            }\r\n        }catch (Exception e){\r\n            System.out.println(e);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public Boolean isUser(String JWT_Token){\r\n        //weryfikacja czy jest user\r\n        HttpHeaders headers = new HttpHeaders();\r\n        headers.add(\"Authorization\", JWT_Token);\r\n        HttpEntity<String> request = new HttpEntity<String>(headers);\r\n        try {\r\n            ResponseEntity re= new RestTemplate().exchange(keycloakAuthAddr+\"/user\", HttpMethod.GET, request, String.class);\r\n            System.out.println(re.getStatusCodeValue());\r\n            if(re.getStatusCodeValue()!=200){//jesli nie 200 wycofaj\r\n                return false;\r\n            }else{\r\n                return true;\r\n            }\r\n        }catch (Exception e){\r\n            System.out.println(e);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public String getUsername(String JWT_Token){\r\n        //weryfikacja czy jest user\r\n        HttpHeaders headers = new HttpHeaders();\r\n        headers.add(\"Authorization\", JWT_Token);\r\n        HttpEntity<String> request = new HttpEntity<String>(headers);\r\n        try {\r\n            ResponseEntity re= new RestTemplate().exchange(keycloakAuthAddr+\"/username\", HttpMethod.GET, request, String.class);\r\n            System.out.println(re.getStatusCodeValue());\r\n            if(re.getStatusCodeValue()!=200){//jesli nie 200 wycofaj\r\n                return null;\r\n            }else{\r\n                return re.getBody().toString();\r\n            }\r\n        }catch (Exception e){\r\n            System.out.println(e);\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    public Long getUserID(String JWT_Token){\r\n        String username = this.getUsername(JWT_Token);\r\n        if(username!=null){\r\n            try {\r\n                ResponseEntity re= new RestTemplate().exchange(\"http://localhost:8000/residents-flat-service/getID/\"+username, HttpMethod.GET, HttpEntity.EMPTY, String.class);\r\n                System.out.println(re.getStatusCodeValue());\r\n                if(re.getStatusCodeValue()!=200){\r\n                    return -1l;//jesli nie 200 wycofaj\r\n                }else {\r\n                    long id = Long.valueOf(re.getBody().toString());\r\n                    return id;\r\n                }\r\n            }catch (Exception e){\r\n                System.out.println(e);\r\n                return -1l;\r\n            }\r\n        }\r\n        return -1l;\r\n\r\n    }\r\n\r\n    public Boolean isLocatorFlat(long locator_id, long flat_id, String JWT_Token){\r\n        HttpHeaders headers = new HttpHeaders();\r\n        headers.add(\"Authorization\", JWT_Token);\r\n        HttpEntity<String> request = new HttpEntity<String>(headers);\r\n        //Boolean lf = new RestTemplate().getForObject(\"http://localhost:8000/managers-locators-service/getLocatorFromFlat/\"+flat_id+\"/\"+locator_id, Boolean.class);\r\n        try {\r\n            ResponseEntity re= new RestTemplate().exchange(\"http://localhost:8000/managers-locators-service/getLocatorFromFlat/\"+flat_id+\"/\"+locator_id, HttpMethod.GET, request, Boolean.class);\r\n            System.out.println(re.getStatusCodeValue());\r\n            if(re.getStatusCodeValue()!=200){\r\n                return false;//jesli nie 200 wycofaj\r\n            }else {\r\n                Boolean lf = (boolean) re.getBody();\r\n                System.out.println(lf);\r\n                return true;\r\n            }\r\n        }catch (Exception e){\r\n            System.out.println(e);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public Boolean isManagerBuilding(long manager_id, long building_id, String JWT_Token){\r\n        HttpHeaders headers = new HttpHeaders();\r\n        headers.add(\"Authorization\", JWT_Token);\r\n        HttpEntity<String> request = new HttpEntity<String>(headers);\r\n        //Boolean lf = new RestTemplate().getForObject(\"http://localhost:8000/managers-locators-service/getLocatorFromFlat/\"+flat_id+\"/\"+locator_id, Boolean.class);\r\n        try {\r\n            ResponseEntity re= new RestTemplate().exchange(\"http://localhost:8000/managers-locators-service/getManagerFromBuilding/\"+building_id+\"/\"+manager_id, HttpMethod.GET, request, Boolean.class);\r\n            System.out.println(re.getStatusCodeValue());\r\n            if(re.getStatusCodeValue()!=200){\r\n                return false;//jesli nie 200 wycofaj\r\n            }else {\r\n                Boolean mb = (boolean) re.getBody();\r\n                System.out.println(mb);\r\n                return true;\r\n            }\r\n        }catch (Exception e){\r\n            System.out.println(e);\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    public ResponseEntity<String> nExchange(String url, String JWT_Token){\r\n        HttpHeaders headers = new HttpHeaders();\r\n        headers.add(\"Authorization\", JWT_Token);\r\n        HttpEntity<String> request = new HttpEntity<String>(headers);\r\n        try {\r\n            ResponseEntity<String> lreq = new RestTemplate().exchange(url, HttpMethod.GET, request, String.class);\r\n            return lreq;\r\n        }catch (Exception e){\r\n            System.out.println(e);\r\n            return null;\r\n        }\r\n        //return new RestTemplate().exchange(url, HttpMethod.GET, request, String.class);\r\n        //return new RestTemplate().exchange(url, HttpMethod.GET, HttpEntity.EMPTY, String.class);\r\n    }\r\n\r\n    public List<Integer> nGetForObjectListInteger(String url, String JWT_Token){\r\n        HttpHeaders headers = new HttpHeaders();\r\n        headers.add(\"Authorization\", JWT_Token);\r\n        HttpEntity<String> request = new HttpEntity<String>(headers);\r\n        try {\r\n            List<Integer> lreq = new RestTemplate().exchange(url, HttpMethod.GET, request, List.class).getBody();\r\n            return lreq;\r\n        }catch (Exception e){\r\n            System.out.println(e);\r\n            return null;\r\n        }\r\n        //return new RestTemplate().exchange(url, HttpMethod.GET, request, List.class).getBody();\r\n        //return new RestTemplate().getForObject(url, String.class).;\r\n        //return new RestTemplate().exchange(url, HttpMethod.GET, HttpEntity.EMPTY, String.class);\r\n    }\r\n\r\n    public String nGetForObjectString(String url, String JWT_Token){\r\n        HttpHeaders headers = new HttpHeaders();\r\n        headers.add(\"Authorization\", JWT_Token);\r\n        HttpEntity<String> request = new HttpEntity<String>(headers);\r\n        try {\r\n            String lreq = new RestTemplate().exchange(url, HttpMethod.GET, request, String.class).getBody();\r\n            return lreq;\r\n        }catch (Exception e){\r\n            System.out.println(e);\r\n            return null;\r\n        }\r\n        //return new RestTemplate().exchange(url, HttpMethod.GET, request, String.class).getBody();\r\n        //return new RestTemplate().getForObject(url, String.class).;\r\n        //return new RestTemplate().exchange(url, HttpMethod.GET, HttpEntity.EMPTY, String.class);\r\n    }\r\n\r\n    public Long nGetForObjectLong(String url, String JWT_Token){\r\n        HttpHeaders headers = new HttpHeaders();\r\n        headers.add(\"Authorization\", JWT_Token);\r\n        HttpEntity<String> request = new HttpEntity<String>(headers);\r\n        try {\r\n            Long lreq = new RestTemplate().exchange(url, HttpMethod.GET, request, Long.class).getBody();\r\n            return lreq;\r\n        }catch (Exception e){\r\n            System.out.println(e);\r\n            return -1l;\r\n        }\r\n        //return new RestTemplate().exchange(url, HttpMethod.GET, request, Long.class).getBody();\r\n        //return new RestTemplate().getForObject(url, String.class).;\r\n        //return new RestTemplate().exchange(url, HttpMethod.GET, HttpEntity.EMPTY, String.class);\r\n    }\r\n\r\n\r\n\r\n}\r\n
===================================================================
diff --git a/../BudMiesz/src/main/java/com/nsai/spoldzielnia/Service/AuthService.java b/../BudMiesz/src/main/java/com/nsai/spoldzielnia/Service/AuthService.java
--- a/../BudMiesz/src/main/java/com/nsai/spoldzielnia/Service/AuthService.java	
+++ b/../BudMiesz/src/main/java/com/nsai/spoldzielnia/Service/AuthService.java	
@@ -12,6 +12,7 @@
 @Service
 public class AuthService {
 
+
     public  String keycloakAuthAddr = "http://localhost:8000/keycloak-service";
 
     public Boolean isAdmin(String JWT_Token){
